// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by PyDjinni from 'function.djinni'
#pragma once
#include "helper.hpp"
#include <memory>
#include "CppCliNamedFunction.hpp"
#include "CppCliFunctionI32Bool.hpp"
#include "CppCliFunctionVoid.hpp"

namespace Test::Function::CppCli {
public ref class Helper abstract {
public:
    static void NamedFunction(::Test::Function::CppCli::NamedFunction^ callback);
    static void AnonymousFunction(System::Func<int, bool>^ callback);
    static ::Test::Function::CppCli::NamedFunction^ CppNamedFunction();
    static System::Func<int, bool>^ CppAnonymousFunction();
    static System::Action^ CppFunctionThrowingException();
internal:
    using CppType = std::shared_ptr<::test::function::Helper>;
    using CppOptType = std::shared_ptr<::test::function::Helper>;
    using CsType = Helper^;

    static CppType ToCpp(CsType cs);
    static CsType FromCppOpt(const CppOptType& cpp);
    static CsType FromCpp(const CppType& cpp) { return FromCppOpt(cpp); }
};
}  // namespace Test::Function::CppCli
