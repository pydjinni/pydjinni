// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by PyDjinni from 'function.djinni'
#pragma once
#include <functional>
#include <vcclr.h>
#include <cstdint>

namespace Test::Function::CppCli {
public delegate bool NamedFunction(int param);

ref class _NamedFunctionDelegateCppProxy
{
public:
    _NamedFunctionDelegateCppProxy(const std::function<bool(int32_t)>& lambda) : _lambda(new std::function<bool(int32_t)>(lambda)) {}
    ~_NamedFunctionDelegateCppProxy();
    !_NamedFunctionDelegateCppProxy();

    bool Invoke(int param);
private:
    std::function<bool(int32_t)>* _lambda;
};

class _NamedFunctionDelegate {
public:
    using CppType = std::function<bool(int32_t)>;
    using CsType = ::Test::Function::CppCli::NamedFunction^;

    static CppType ToCpp(gcroot<CsType> delegate);
    static CsType FromCpp(const CppType& function);
};
}  // namespace Test::Function::CppCli
