// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by PyDjinni from 'error.pydjinni'
#pragma once
#include "async_throwing_callback.hpp"
#include "CppCliFooError.hpp"
#include "pydjinni/coroutine/callback_awaitable.hpp"
#include "pydjinni/coroutine/schedule.hpp"
#include "pydjinni/coroutine/task.hpp"
namespace Test::Error::CppCli {
public ref class AsyncThrowingCallback abstract {
public:
    virtual System::Threading::Tasks::Task^ ThrowingError() abstract;
internal:
    using CppType = std::shared_ptr<::test::error::AsyncThrowingCallback>;
    using CppOptType = std::shared_ptr<::test::error::AsyncThrowingCallback>;
    using CsType = AsyncThrowingCallback^;

    static CppType ToCpp(CsType cs);
    static CsType FromCppOpt(const CppOptType& cpp);
    static CsType FromCpp(const CppType& cpp) { return FromCppOpt(cpp); }
    ref class ThrowingErrorCallbackHandleProxy {
    public:
        ThrowingErrorCallbackHandleProxy(::pydjinni::coroutine::CallbackHandle<>& handle);
        void HandleCallback(System::Threading::Tasks::Task^ task);
    private:
        ::pydjinni::coroutine::CallbackHandle<>* _handle;
    };
};
} // namespace Test::Error::CppCli
