{#
Copyright 2023 jothepro

        Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
        limitations under the License.
#}
{% extends "base.jinja2" %}
{% from "macros.jinja2" import comment, deprecated %}

{% block header %}
{% for header in type_def.dependencies | headers('objc') -%}
#import {{ header }}
{% endfor %}
{% if type_def.namespace %}
#ifndef __PYDJINNI_OBJC_NS_{{ type_def.objc.namespace }}
struct {{ type_def.objc.namespace }} {};
#define __PYDJINNI_OBJC_NS_{{ type_def.objc.namespace }}
#endif
{% endif %}
{% endblock %}

{% block content %}
{% if type_def.objc.comment %}
{{ comment(type_def) }}
{% endif %}
{% if config.swift.rename_interfaces %}
NS_SWIFT_NAME({{ type_def.objc.swift_typename }})
{% endif %}
{% if type_def.deprecated %}
{{ deprecated(type_def) }}
{% endif %}
{% if "objc" in type_def.targets %}
@protocol {{ type_def.objc.name }} {{ "<NSObject>" if config.strict_protocols }}
{% else %}
@interface {{ type_def.objc.name }} : NSObject
{% endif %}
{% for method in type_def.methods %}
{% if method.objc.comment %}
{{ comment(method) }}
{% endif %}
{{ method.objc.specifier }} ({{ (((method.objc.annotation ~ " ") if method.objc.annotation) ~ method.objc.type_decl) if not method.asynchronous else "void" }}){{ method.objc.name }}
{%- for parameter in method.parameters %}
{{ ":" if loop.first else (parameter.objc.name.rjust(method.objc.specifier|length + method.objc.type_decl|length + method.objc.name|length + 3 + ((method.objc.annotation|length + 1) if method.objc.annotation else 0) ) ~ ":") }}({{ (parameter.objc.annotation ~ " ") if parameter.objc.annotation }}{{ parameter.objc.type_decl }}){{ parameter.objc.name }}
{% endfor %}
{% if method.asynchronous %}
{{ "completion".rjust(method.objc.specifier|length + method.objc.type_decl|length + method.objc.name|length + 3 + ((method.objc.annotation|length + 1) if method.objc.annotation else 0) ) if method.parameters }}:({{ method.objc.completion_handler }})completion
{% if method.throwing and config.swift.rename_interfaces %}
  __attribute__((swift_async_error(nonnull_error)))
{% endif %}
{% elif method.throwing %}
{{ "error".rjust(method.objc.specifier|length + method.objc.type_decl|length + method.objc.name|length + 3 + ((method.objc.annotation|length + 1) if method.objc.annotation else 0) ) if method.parameters }}:(NSError* _Nullable * _Nonnull)error
{% if config.swift.rename_interfaces %}
  __attribute__((swift_error(nonnull_error)))
{% endif %}
{% endif %}
{% if method.deprecated %}
  {{ deprecated(method) | indent(2) }}
{% endif %}
{% if config.swift.rename_interfaces %}
  NS_SWIFT_NAME({{ method.objc.name }}(
{%- for parameter in method.parameters -%}
{{ parameter.objc.name }}:
{%- endfor -%}
{%- if method.asynchronous -%}
completion:
{%- endif -%}
))
{%- endif -%};
{% endfor %}
@end
{% endblock %}
