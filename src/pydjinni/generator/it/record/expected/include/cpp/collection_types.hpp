// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by PyDjinni from 'record.pydjinni'
#pragma once
#include <algorithm>
#include <cstdint>
#include <format>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>

namespace test::record {
struct CollectionTypes final {
    const std::vector<int32_t> int_list;
    const std::vector<std::string> string_list;
    const std::unordered_set<int32_t> int_set;
    const std::unordered_set<std::string> string_set;
    const std::unordered_map<int32_t, int32_t> int_int_map;
    const std::unordered_map<std::string, std::string> string_string_map;
    CollectionTypes(std::vector<int32_t> int_list, std::vector<std::string> string_list, std::unordered_set<int32_t> int_set, std::unordered_set<std::string> string_set, std::unordered_map<int32_t, int32_t> int_int_map, std::unordered_map<std::string, std::string> string_string_map)
    : int_list(std::move(int_list))
    , string_list(std::move(string_list))
    , int_set(std::move(int_set))
    , string_set(std::move(string_set))
    , int_int_map(std::move(int_int_map))
    , string_string_map(std::move(string_string_map))
    {}
};
std::string to_string(const ::test::record::CollectionTypes& value);
} // namespace test::record
template<>
struct std::formatter<::test::record::CollectionTypes> : std::formatter<std::string> {
    template<typename FormatContext>
    auto format(const ::test::record::CollectionTypes& value, FormatContext &ctx) const {
        return std::format_to(ctx.out(), "{}", test::record::to_string(value));
    }
};
