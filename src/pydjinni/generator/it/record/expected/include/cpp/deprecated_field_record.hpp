// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by PyDjinni from 'record.pydjinni'
#pragma once
#include "pydjinni/deprecated.hpp"
#include <algorithm>
#include <cstdint>
#include <format>
#include <optional>

namespace test::record {
struct DeprecatedFieldRecord final {
    /**
     * @deprecated the field is old
     */
    const int32_t old [[deprecated("the field is old")]];
    /**
     * foo
     * 
     * @deprecated this is optional and old
     */
    const std::optional<int32_t> older [[deprecated("this is optional and old")]];
    /**
     * @param old @deprecated the field is old
     * @param older foo
     * 
     * @deprecated this is optional and old
     */
PYDJINNI_DISABLE_DEPRECATED_WARNINGS
    DeprecatedFieldRecord(int32_t old, std::optional<int32_t> older)
    : old(std::move(old))
    , older(std::move(older))
    {}
PYDJINNI_ENABLE_WARNINGS
};
std::string to_string(const ::test::record::DeprecatedFieldRecord& value);
} // namespace test::record
template<>
struct std::formatter<::test::record::DeprecatedFieldRecord> : std::formatter<std::string> {
    template<typename FormatContext>
    auto format(const ::test::record::DeprecatedFieldRecord& value, FormatContext &ctx) const {
        return std::format_to(ctx.out(), "{}", test::record::to_string(value));
    }
};
