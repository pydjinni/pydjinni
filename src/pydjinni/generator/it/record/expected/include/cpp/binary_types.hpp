// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by PyDjinni from 'record.pydjinni'
#pragma once
#include "pydjinni/type/binary.hpp"
#include <algorithm>
#include <format>
#include <optional>

namespace test::record {
struct BinaryTypes final {
    const std::vector<uint8_t> binary_t;
    const std::optional<std::vector<uint8_t>> binary_optional;
    BinaryTypes(std::vector<uint8_t> binary_t, std::optional<std::vector<uint8_t>> binary_optional)
    : binary_t(std::move(binary_t))
    , binary_optional(std::move(binary_optional))
    {}
};
std::string to_string(const ::test::record::BinaryTypes& value);
} // namespace test::record
template<>
struct std::formatter<::test::record::BinaryTypes> : std::formatter<std::string> {
    template<typename FormatContext>
    auto format(const ::test::record::BinaryTypes& value, FormatContext &ctx) const {
        return std::format_to(ctx.out(), "{}", test::record::to_string(value));
    }
};
